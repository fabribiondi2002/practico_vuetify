<route lang="yaml">
meta:
  layout: home
</route>
<template>
        <v-card style="width: 100%; height: 100%;">
            <v-layout>
                <v-app-bar color="primary">

                    <v-card-text class="d-flex justify-start">
                        <v-text-field v-model="search" append-inner-icon="mdi-magnify" density="compact"
                            label="Buscar productos" variant="solo" hide-details single-line style="width: 100%;" />
                    </v-card-text>
                    <v-btn icon @click.stop="drawer = !drawer">
                        <v-icon>mdi-cart</v-icon>
                    </v-btn> </v-app-bar>

                <v-navigation-drawer v-model="drawer" :location="$vuetify.display.mobile ? 'bottom' : 'right'" temporary
                    width="400">
                    <v-card width="100%">
                        <v-list>
                            <v-list-item v-for="item in carrito" :key="item.id">
                                <v-row text-align="center" justify="space-between">
                                    <v-col cols="auto">
                                        <v-list-item-title>{{ item.nombre }}</v-list-item-title>
                                        <v-list-item-subtitle>
                                            Precio: ${{ item.precio }} - Cantidad: {{ item.cantidad }}
                                        </v-list-item-subtitle>
                                    </v-col>
                                    <v-col cols="auto">
                                        <v-number-input control-variant="split" v-model="item.cantidad" :min="0"
                                            :max="products.find(p => p.id === item.id)?.stock + item.cantidad"
                                            @update:model-value="() => actualizarStock(item)"></v-number-input>

                                    </v-col>
                                </v-row>
                            </v-list-item>

                            <v-list-item v-if="carrito.length === 0">
                                <v-list-item-title>El carrito está vacío</v-list-item-title>
                            </v-list-item>
                        </v-list>
                    </v-card>
                </v-navigation-drawer>


                <v-main>
                    <v-card class="d-flex" style="margin-left: 16px;" max-width="100%">
                        <v-list width="100%" style="overflow-y: auto; max-height: 800px;">
                            <v-list-item v-for="producto in productosFiltrados" :key="producto.id">
                                <v-card outlined class="pa-2 mb-2">
                                    <v-row align="center" justify="space-between">
                                        <!-- Texto a la izquierda -->
                                        <v-col cols="auto">
                                            <v-list-item-title>{{ producto.nombre }}</v-list-item-title>
                                            <v-list-item-subtitle>
                                                Precio: ${{ producto.precio }} - Stock: {{ producto.stock }}
                                            </v-list-item-subtitle>
                                        </v-col>
                                        <v-col cols="auto">
                                            <v-btn block :disabled="producto.stock === 0" size="small" color="primary"
                                                style="margin: 0;" @click="agregarAlCarrito(producto)">
                                                Agregar al carrito
                                            </v-btn>
                                            <v-divider class="my-1"></v-divider>
                                            <v-btn block size="small" color="primary" style="margin: 0;"
                                                :to="`/products/${producto.id}`">
                                                Ver detalles
                                            </v-btn>
                                        </v-col>
                                    </v-row>
                                </v-card>
                            </v-list-item>
                            <v-list-item v-if="productosFiltrados.length === 0">
                                <v-list-item-title>No se encontraron productos</v-list-item-title>
                            </v-list-item>
                        </v-list>
                    </v-card>
                </v-main>
            </v-layout>
        </v-card>

</template>


<script setup>
import { ref, computed, watch } from "vue";
import home from "@/layouts/home.vue";

const search = ref("");
const products = ref([
    { id: 1, nombre: "Jabon", precio: 100, stock: 10 }, { id: 2, nombre: "Papel higienico", precio: 200, stock: 5 }, { id: 3, nombre: "Pasta dental", precio: 300, stock: 0 }, { id: 4, nombre: "Shampoo", precio: 450, stock: 8 }, { id: 5, nombre: "Acondicionador", precio: 400, stock: 6 }, { id: 6, nombre: "Cepillo de dientes", precio: 150, stock: 12 }, { id: 7, nombre: "Desodorante", precio: 350, stock: 7 }, { id: 8, nombre: "Toallas sanitarias", precio: 250, stock: 15 }, { id: 9, nombre: "Jabon liquido", precio: 180, stock: 9 }, { id: 10, nombre: "Cotonetes", precio: 80, stock: 20 }, { id: 11, nombre: "Crema humectante", precio: 500, stock: 4 }, { id: 12, nombre: "Pasta de manos", precio: 220, stock: 10 }, { id: 13, nombre: "Alcohol en gel", precio: 300, stock: 5 }, { id: 14, nombre: "Limpiador facial", precio: 350, stock: 6 }, { id: 15, nombre: "Jabon exfoliante", precio: 200, stock: 8 }
]);
const carrito = ref([]);


const productosFiltrados = computed(() =>
    products.value.filter((producto) =>
        producto.nombre.toLowerCase().includes(search.value.toLowerCase())
    )
);
const agregarAlCarrito = (producto) => {
    if (producto.stock <= 0) {
        alert("No hay suficiente stock.");
        return;
    }

    const item = carrito.value.find(p => p.id === producto.id);
    if (item) {
        item.cantidad++;
        item.cantAnt++;
    } else {
        carrito.value.push({ ...producto, cantidad: 1, cantAnt: 1 });
    }
    producto.stock--;
};
const actualizarStock = (item) => {
    const producto = products.value.find(p => p.id === item.id);
    if (!producto) return;

    const diferencia = item.cantidad - item.cantAnt;

    if (diferencia > 0) {

        if (producto.stock >= diferencia) {
            producto.stock -= diferencia;
        } else {
            alert("No hay suficiente stock.");
            item.cantidad = item.cantAnt;
            return;
        }
    } else if (diferencia < 0) {

        producto.stock += Math.abs(diferencia);
        if (item.cantidad <= 0) {
            carrito.value = carrito.value.filter(p => p.id !== item.id);
        }
    }
    item.cantAnt = item.cantidad;
};

const drawer = ref(false)
const group = ref(null)

watch(group, () => {
    drawer.value = false
})

</script>
